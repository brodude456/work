import random
from copy import deepcopy

board=[":_:",]*16
def move(board,way):
    board=deepcopy(board)
    way=way

    reversedd=[]

    for i in range(0,len(board)):
        reversedd.append(i)

        reversedd.reverse()

    for k in range(0,3):

        if way=="up":
            for i in range(0,len(board)):
                if i>3 and board[i-4]==":_:":
                    board[i-4]=board[i]
                    board[i]=":_:"

        elif way=="down":
            for i in reversedd:
                if i<11 and board[i+4]==":_:":
                    board[i+4]=board[i]
                    board[i]=":_:"

        elif way=="right":
            for i in reversedd:
                if i!=15:
                    if (i+1)%4!=0 and board[i+1]==":_:":
                        board[i+1]=board[i]
                        board[i]=":_:"

        elif way=="left":
            for i in range(0,len(board)):
                if i!=0:
                    if i%4!=0 and board[i-1]==":_:":
                        board[i-1]=board[i]
                        board[i]=":_:"

    return  board

def print_te(board):
    print(board[0],board[1],board[2],board[3])
    print(board[4],board[5],board[6],board[7])
    print(board[8],board[9],board[10],board[11])
    print(board[12],board[13],board[14],board[15])

def make_a_random_numero(board):
    board=deepcopy(board)
    numero=[]

    for i in range(1,11):
        numero.append(i)

    randomm=random.choice(numero)

    list=[]

    for i in range(0,len(board)):
        if board[i]==":_:":
            list.append(i)

    randomm2=random.choice(list)

    board[randomm2]=":2:"

    if randomm==1 or randomm==2 or randomm==3:
        board[randomm2]=":4:"

    return board

def check_if_numero_coliding(board,way):

    board=deepcopy(board)
    way=way

    reversedd=[]

    for i in range(0,len(board)):
        reversedd.append(i)

        reversedd.reverse()

    if way=="left":

        for i in range(0,len(board)):

            if i+1%4!=0 :

                if i!=len(board)-1:

                    if board[i]==board[i+1]!=":_:" and i+1%3!=0:

                            board[i]=":{}:".format(str(int(board[i][1:-1])*2))
                            board[i+1]=":_:"
                            board=move(board,way)
    elif way=="right":

        for i in reversedd:

            if i+1%4!=0 :

                if i!=len(board)-1:

                    if board[i]==board[i+1]!=":_:" :

                        board[i+1]=":{}:".format(str(int(board[i][1:-1])*2))
                        board[i]=":_:"
                        board=move(board,way)

    elif way=="up" :

        for i in range(0,len(board)):

            if i<11 and board[i]==board[i+4]!=":_:":

                    board[i]=":{}:".format(str(int(board[i][1:-1])*2))
                    board[i+4]=":_:"
                    board=move(board,way)

    elif way=="down":

        for i in reversedd:

            if i<11 and board[i]==board[i+4]!=":_:":

                    board[i+4]=":{}:".format(str(int(board[i][1:-1])*2))
                    board[i]=":_:"
                    board=move(board,way)


    return board

z=0
while True:

    if z==0:
        board=make_a_random_numero(board)
    print_te(board)

    if ":_:" not in board and board==check_if_numero_coliding(board,"up") and board==check_if_numero_coliding(board,"down") and board==check_if_numero_coliding(board,"right") and board==check_if_numero_coliding(board,"left"):
        print("game over")
        break

    alavobles=["up","down","right","left"]
    inputt=input("which way do you want to go")

    while inputt not in alavobles:
        inputt=input("not a valid answer try again")

    if board!=move(board,inputt):
        board=move(board,inputt)
        z=0
    elif board==move(board,inputt):
        z=1
    board=check_if_numero_coliding(board,inputt)



